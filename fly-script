	local ctrl = {f = 0, b = 0, l = 0, r = 0} 
    local lastctrl = {f = 0, b = 0, l = 0, r = 0} 
    local maxspeed = 400 
    local speed = 5000 
	local plr = game.Players.LocalPlayer
	local char = plr.Character or plr.CharacterAdded:Wait()
	local Humanoid = char:WaitForChild('Humanoid')
	local FowardAnim = Instance.new('Animation')
	FowardAnim.AnimationId = 'rbxassetid://4604323138'
	local PlayFAnim = Humanoid:LoadAnimation(FowardAnim)
	local BackwardAnim = Instance.new('Animation')
	BackwardAnim.AnimationId = 'rbxassetid://4607617459'
	local PlayBAnim = Humanoid:LoadAnimation(BackwardAnim)
	local HumanoidRootPart = char:WaitForChild('HumanoidRootPart')
	local UIS = game:GetService('UserInputService')
	local Mouse = plr:GetMouse()
	local Debris = game:GetService('Debris')
	local Toggle = false

	UIS.InputBegan:Connect(function(Input, Istyping)
		if Input.KeyCode == Enum.KeyCode.F then
			if Toggle == false then -- toggling f key
				HumanoidRootPart.Anchored = true
				Toggle = true
				game.Players.LocalPlayer.Character.Humanoid.PlatformStand = true
			elseif Toggle == true then -- when they press F to untoggle
				HumanoidRootPart.Anchored = false
				Toggle = false
				game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
				local Children = HumanoidRootPart:GetChildren()
				for i, child in pairs (Children) do -- to fix the char if something is still in HumanoidRootPart
					if child:IsA('BodyVelocity') then
						child:Destroy()
					elseif child:IsA('BodyGyro') then
						child:Destroy()
					end
				end
			end
		end
	end)

	UIS.InputBegan:Connect(function(Input, Istyping)
		if Input.KeyCode == Enum.KeyCode.W then
			if Toggle == false then return end -- makes sure to return back if a plr as toggle = false
			HumanoidRootPart.Anchored = false
			if HumanoidRootPart:FindFirstChildOfClass("BodyVelocity") then
				HumanoidRootPart:FindFirstChildOfClass("BodyVelocity"):Destroy()
			end
			local Forward = Instance.new("BodyVelocity",HumanoidRootPart)
			Forward.Name = "ForwardMovement"
			Forward.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
			local Gyro = Instance.new("BodyGyro",HumanoidRootPart)
			Gyro.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
			Gyro.D = 100
			Gyro.P = 10000
			while Toggle == true do
				Forward.Velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (1+1)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(0+0,(0+0)*.4,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*50
				Gyro.CFrame = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0) 
				wait()
			end
		end
	end)
	UIS.InputEnded:Connect(function(Input, Istyping)
		if Input.KeyCode == Enum.KeyCode.W then
			if Toggle == false then return end
			if HumanoidRootPart:FindFirstChild("ForwardMovement") then
				HumanoidRootPart.ForwardMovement:Destroy()
				HumanoidRootPart.Anchored = true
				if HumanoidRootPart:FindFirstChildOfClass("BodyGyro") then
					HumanoidRootPart:FindFirstChildOfClass("BodyGyro"):Destroy()
				end
			end
		end
	end)
	UIS.InputBegan:Connect(function(Input, Istyping)
		if Input.KeyCode == Enum.KeyCode.S then
			if Toggle == false then return end
			HumanoidRootPart.Anchored = false
			if HumanoidRootPart:FindFirstChildOfClass("BodyVelocity") then
				HumanoidRootPart:FindFirstChildOfClass("BodyVelocity"):Destroy()
			end
			local Back = Instance.new("BodyVelocity",HumanoidRootPart)
			Back.Name = "BackMovement"
			Back.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
			local Gyro = Instance.new("BodyGyro",HumanoidRootPart)
			Gyro.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
			Gyro.D = 100
			Gyro.P = 10000
			while Toggle == true do
				Back.Velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (1+1)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(0+0,(0+0)*.4,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*-50
				Gyro.CFrame = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0) 
				wait()
			end
		end
	end)
	UIS.InputEnded:Connect(function(Input, Istyping)
		if Input.KeyCode == Enum.KeyCode.S then
			if Toggle == false then return end
			if HumanoidRootPart:FindFirstChild("BackMovement") then
				HumanoidRootPart.BackMovement:Destroy()
				HumanoidRootPart.Anchored = true
				if HumanoidRootPart:FindFirstChildOfClass("BodyGyro") then
					HumanoidRootPart:FindFirstChildOfClass("BodyGyro"):Destroy()
				end
			end
		end
	end)
	UIS.InputBegan:Connect(function(Input, Istyping)
		if Input.KeyCode == Enum.KeyCode.A then
			if Toggle == false then return end
			HumanoidRootPart.Anchored = false
			if HumanoidRootPart:FindFirstChildOfClass('BodyVelocity') then
				HumanoidRootPart:FindFirstChildOfClass('BodyVelocity'):Destroy()
			end
			local Left = Instance.new('BodyVelocity',HumanoidRootPart)
			Left.Name = 'LeftMovement'
			Left.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
			local Gyro = Instance.new('BodyGyro',HumanoidRootPart)
			Gyro.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
			Gyro.D = 100
			Gyro.P = 10000
			while Toggle == true do
				Left.Velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (0+0)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(-1+0,(0+0)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*100
				Gyro.CFrame  = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0) 
				wait()
			end
		end
	end)
	UIS.InputEnded:Connect(function(Input, Istyping)
		if Input.KeyCode == Enum.KeyCode.A then
			if Toggle == false then return end
			if HumanoidRootPart:FindFirstChild("LeftMovement") then
				HumanoidRootPart.LeftMovement:Destroy()
				HumanoidRootPart.Anchored = true
				if HumanoidRootPart:FindFirstChildOfClass("BodyGyro") then
					HumanoidRootPart:FindFirstChildOfClass("BodyGyro"):Destroy()
				end
			end
		end
	end)
	UIS.InputBegan:Connect(function(Input, Istyping)
		if Input.KeyCode == Enum.KeyCode.D then
			if Toggle == false then return end
			HumanoidRootPart.Anchored = false
			if HumanoidRootPart:FindFirstChildOfClass('BodyVelocity') then
				HumanoidRootPart:FindFirstChildOfClass('BodyVelocity'):Destroy()
			end
			local Right = Instance.new('BodyVelocity',HumanoidRootPart)
			Right.Name = 'RightMovement'
			Right.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
			local Gyro = Instance.new('BodyGyro',HumanoidRootPart)
			Gyro.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
			Gyro.D = 100
			Gyro.P = 10000
			while Toggle == true do
				Right.Velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (0+0)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(0+1,(0+0)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*100
				Gyro.CFrame = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0) 
				wait()
			end
		end
	end)
	UIS.InputEnded:Connect(function(Input, Istyping)
		if Input.KeyCode == Enum.KeyCode.D then
			if Toggle == false then return end
			if HumanoidRootPart:FindFirstChild("RightMovement") then
				HumanoidRootPart.RightMovement:Destroy()
				HumanoidRootPart.Anchored = true
				if HumanoidRootPart:FindFirstChildOfClass("BodyGyro") then
					HumanoidRootPart:FindFirstChildOfClass("BodyGyro"):Destroy()
				end
			end
		end
	end)
		UIS.InputBegan:Connect(function(Input, Istyping)
		if Input.KeyCode == Enum.KeyCode.Space then
			if Toggle == false then return end
			HumanoidRootPart.Anchored = false
			if HumanoidRootPart:FindFirstChildOfClass('BodyVelocity') then
				HumanoidRootPart:FindFirstChildOfClass('BodyVelocity'):Destroy()
			end
			local Up = Instance.new('BodyVelocity',HumanoidRootPart)
			Up.Name = 'RightMovement'
			Up.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
			local Gyro = Instance.new('BodyGyro',HumanoidRootPart)
			Gyro.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
			Gyro.D = 100
			Gyro.P = 10000
			while Toggle == true do
				Up.Velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (0+0)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(0+0,(1+1)*1,1).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*25
				Gyro.CFrame = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0) 
				wait()
			end
		end
	end)
	UIS.InputEnded:Connect(function(Input, Istyping)
		if Input.KeyCode == Enum.KeyCode.Space then
			if Toggle == false then return end
			if HumanoidRootPart:FindFirstChild("RightMovement") then
				HumanoidRootPart.RightMovement:Destroy()
				HumanoidRootPart.Anchored = true
				if HumanoidRootPart:FindFirstChildOfClass("BodyGyro") then
					HumanoidRootPart:FindFirstChildOfClass("BodyGyro"):Destroy()
				end
			end
		end
	end)
			UIS.InputBegan:Connect(function(Input, Istyping)
		if Input.KeyCode == Enum.KeyCode.LeftControl or Input.KeyCode == Enum.KeyCode.RightControl then
			if Toggle == false then return end
			HumanoidRootPart.Anchored = false
			if HumanoidRootPart:FindFirstChildOfClass('BodyVelocity') then
				HumanoidRootPart:FindFirstChildOfClass('BodyVelocity'):Destroy()
			end
			local Up = Instance.new('BodyVelocity',HumanoidRootPart)
			Up.Name = 'RightMovement'
			Up.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
			local Gyro = Instance.new('BodyGyro',HumanoidRootPart)
			Gyro.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
			Gyro.D = 100
			Gyro.P = 10000
			while Toggle == true do
				Up.Velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (0+0)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(0+0,(1+1)*1,1).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*-25
				Gyro.CFrame = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0) 
				wait()
			end
		end
	end)
	UIS.InputEnded:Connect(function(Input, Istyping)
		if Input.KeyCode == Enum.KeyCode.LeftControl or Input.KeyCode == Enum.KeyCode.RightControl then
			if Toggle == false then return end
			if HumanoidRootPart:FindFirstChild("RightMovement") then
				HumanoidRootPart.RightMovement:Destroy()
				HumanoidRootPart.Anchored = true
				if HumanoidRootPart:FindFirstChildOfClass("BodyGyro") then
					HumanoidRootPart:FindFirstChildOfClass("BodyGyro"):Destroy()
				end
			end
		end
	end)
